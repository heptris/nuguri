upstream frontend {
    server react:3000;
}

upstream backend {
    server spring:8080;
}

server {
  listen 80;
  listen [::]:80;

  server_name k7a702.p.ssafy.io www.k7a702.p.ssafy.io;

  location /.well-known/acme-challenge/ {
    allow all;
    root /var/www/certbot;
  }

  location / {
    return 301 https://k7a702.p.ssafy.io$request_uri;
  }
}

server {
  client_max_body_size 128M;
  listen 443 ssl;
  server_name k7a702.p.ssafy.io;

  # ssl 인증서 적용하기
  ssl_certificate /etc/letsencrypt/live/k7a702.p.ssafy.io/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/k7a702.p.ssafy.io/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  location / {
    # root /data/client/dist;
    # index index.html index.htm;
    # try_files $uri /index.html;
    proxy_pass http://frontend;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /auth {
    proxy_pass http://backend/auth;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /app/sse {
    proxy_pass http://backend/app/sse;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-forwarded-Proxo $scheme;
    proxy_buffering off;
    proxy_set_header Connection '';
    proxy_http_version 1.1;
  }
  
  location /app {
    proxy_pass http://backend/app;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

}

