version: "3"

volumes:
  mysql_db_vol: {}
  redis_cache_vol: {}
  # react_dist_vol: {}

services:
  nginx:
    container_name: nginx
    image: nginx
    volumes:
      # - react_dist_vol:/data/client/dist
      - ./nginx/:/etc/nginx/conf.d/
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
      - "443:443"
    expose:
      - 80
      - 443
    depends_on:
      - spring
      - react

  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  react:
    image: $FRONT_IMAGE_NAME
    container_name: react
    # volumes:
    #   - react_dist_vol:/app/dist
    command: |
      yarn start

  spring:
    image: $BACK_IMAGE_NAME
    container_name: spring
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - mysql
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE}?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_ROOT_PASSWORD}

  redis:
    image: redis
    container_name: redis
    volumes:
      - redis_cache_vol:/data
    expose:
      - 6379

  mysql:
    image: mysql:8.0.29
    container_name: mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_HOST=%
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    volumes:
      - mysql_db_vol:/var/lib/mysql
    expose:
     - 3306
